---
# Use template not git to resolve the ansible variable project_name in multiple files
#
# - name: Git CityData
#   git:
#     repo: '{{ repo_url }}'
#     dest: '{{ ansible_env.HOME }}//{{ project_dir }}'
#   ignore_errors: True
#   no_log: True
#
# - name: Template this project from Ansible Control to server
#   template:
#     src: '{{ playbook_dir }}/'
#     dest: '{{ ansible_env.HOME }}/{{ project_dir }}/'

- name: Create paths for project dir
  file:
    state: directory
    dest: '~/{{ item.path }}'
  with_filetree: '{{ playbook_dir }}/'
  when: item.state == 'directory'

- name: Template this project from Ansible Control to server
  template:
    src: '{{ item.src }}'
    dest: '~/{{ item.path }}'
  with_filetree: '{{ playbook_dir }}/'
  when: item.state == 'file'

- name: Customise docker config
  template:
    src: docker-compose-override.yml.j2
    dest: '{{ ansible_env.HOME }}/{{ project_dir }}/docker-compose-override.yml'

- name: Set vars in docker config
  template:
    src: '{{ playbook_dir }}/docker-compose.yml'
    dest: '{{ ansible_env.HOME }}/{{ project_dir }}/docker-compose.yml'

- name: Prepare the stack (without running) 1/2
  # docker_service:
  #   project_src: '~/{{ project_dir }}'
  #   pull: yes
  command: docker-compose -f docker-compose.yml pull --no-parallel
  args:
    chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
  become: true

- name: Prepare the stack (without running) 2/2
  command: docker-compose -f docker-compose.yml up --no-start
  args:
    chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
  become: true

- name: Start the database
  command: docker-compose -f docker-compose.yml up -d postgres
  args:
    chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
  become: true

- name: Initialise geoserver
  command: docker-compose -f docker-compose.yml run --rm geoserver exit 0
  args:
    chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
  become: true
