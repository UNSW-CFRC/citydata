---
- name: Git CityData
  git:
    repo: '{{ repo_url }}'
    dest: '{{ ansible_env.HOME }}/{{ project_dir }}'
  ignore_errors: True
  no_log: True

- name: Template geonode-project files from Ansible Control to server
  template:
    src: '{{ item }}'
    dest: '~/{{ project_dir }}/{{ project_dir }}/'
  with_fileglob:
    - '{{ playbook_dir }}/geonode-project/*.py'
    - '{{ playbook_dir }}/geonode-project/*.py.sample'

- name: rename subdir to project_dir
  command: mv geonode-project {{ project_dir }}
  args:
    chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
    creates: '{{ ansible_env.HOME }}/{{ project_dir }}/{{ project_dir }}'

- name: Template home dir files from Ansible Control to server
  template:
    src: '{{ item }}'
    dest: '~/{{ project_dir }}/'
  with_fileglob:
    - '{{ playbook_dir }}/.env'
    - '{{ playbook_dir }}/docker*.yml'
    - '{{ playbook_dir }}/Dockerfile'
    - '{{ playbook_dir }}/*.py'
    # - '{{ playbook_dir }}/playbook.yml'
    - '{{ playbook_dir }}/uwsgi.ini'

# - name: Customise docker config
#   template:
#     src: docker-compose-override.yml.j2
#     dest: '{{ ansible_env.HOME }}/{{ project_dir }}/docker-compose-override.yml'

# - name: Set vars in docker config
#   template:
#     src: '{{ playbook_dir }}/docker-compose.yml'
#     dest: '{{ ansible_env.HOME }}/{{ project_dir }}/docker-compose.yml'

- name: Prepare the stack (without running) 1/2
  command: docker-compose -f docker-compose.yml pull --no-parallel
  args:
    chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
  become: true

- name: Prepare the stack (without running) 2/2
  command: docker-compose -f docker-compose.yml up --no-start
  args:
    chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
  become: true

- name: Start the database
  command: docker-compose -f docker-compose.yml up -d db
  args:
    chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
  become: true

- debug: msg="{{ lookup('env','PATH') }} is an environment variable"

- name: Initialise geoserver
  shell: docker-compose -f docker-compose.yml run --rm geoserver exit 0
  args:
    chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
    executable: /bin/bash
  become: true
