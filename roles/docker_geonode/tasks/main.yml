---
- name: Set public port for http
  set_fact:
    public_port: 80
  when: public_protocol == 'http'

- name: Set public port for https
  set_fact:
    public_port: 443
  when: public_protocol == 'https'

- name: Git Geonode
  git:
    repo: https://github.com/GeoNode/geonode
    dest: ~/geonode
    force: True

- name: Set project name for docker
  replace:
    path: ~/geonode/.env
    regexp: ^\s*COMPOSE_PROJECT_NAME\s*=.*$
    replace: COMPOSE_PROJECT_NAME={{ project_name }}

- name: Create project directory
  file:
    path: ~/{{ project_dir }}
    state: directory

- name: Copy tasks - patch for Geonode PR 4403
  copy:
    src: tasks.py
    dest: ~/geonode/tasks.py

- name: Template docker-compose override files
  template:
    src: 'docker-compose.override-{{ item }}.yml.j2'
    dest: ~/{{ project_dir }}/docker-compose.override-{{ item }}.yml
  with_items:
    - hostname
    - volumes
    - debug

- name: Template citydata django files
  template:
    src: '{{ playbook_dir }}/geonode-project/{{ item }}/'
    dest: ~/{{ project_dir }}/{{ project_dir }}/{{ item }}
  with_items:
    - __init__.py
    - apps.py
    - celeryapp.py
    - settings.py
    - urls.py
    - version.py
    - wsgi.py

- name: Template local settings
  template:
    src: '{{ playbook_dir }}/geonode-project/local_settings.py.sample'
    dest: ~/{{ project_dir }}/{{ project_dir }}/local_settings.py

- name: Copy custom static and template files
  copy:
    src: '{{ playbook_dir }}/geonode-project/{{ org }}/{{ project_dir }}/{{ item }}/'
    dest: ~/{{ project_dir }}/{{ project_dir }}/{{ item }}
  with_items:
    - static
    - templates

- name: Set page title
  replace:
    path: ~/{{ project_dir }}/{{ project_dir }}/templates/site_base.html
    regexp: INSERT_PROJECT_HERE
    replace: '{{ project }}'

- name: Create folders for docker volumes
  file:
    name: '{{ item }}'
    state: directory
  with_items:
    - '{{ statics_dir }}'
    - '{{ log_dir }}/nginx'
  become: True

# - name: Refresh private_ip var
#   include_vars: group_vars/{{ envt }}

- name: Link geoserver log to logs directory
  file:
    src: '{{ gsdata }}/logs/'
    dest: '{{ log_dir }}/geoserver'
    state: link
    force: True
    follow: False
  become: True

# Doesn't work: port is not used and docker.pid exists but launch still fails
# - name: Wait for docker daemon to start
#   wait_for:
#     # port: 2375
#     path: /var/run/docker.pid
#     # delay: 10
#     timeout: 600

- name: Launch the stack
  command: >
    docker-compose
      -f docker-compose.yml
      -f ~/{{ project_dir }}/docker-compose.override.hostname.yml
      -f ~/{{ project_dir }}/docker-compose.override.volumes.yml
      -f ~/{{ project_dir }}/docker-compose.override.django-env.yml
      up --build
  args:
    chdir: ~/geonode
