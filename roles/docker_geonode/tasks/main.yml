---
- name: Git Geonode
  git:
    repo: https://github.com/GeoNode/geonode
    dest: ~/geonode
    force: True

- name: Set project name for docker
  replace:
    path: ~/geonode/.env
    regexp: ^\s*COMPOSE_PROJECT_NAME\s*=.*$
    replace: COMPOSE_PROJECT_NAME={{ project_name }}


- name: Template docker-compose files
  template:
    src: '{{ item }}.j2'
    dest: ~/{{ project_dir }}/{{ item }}
  with_items:
    - docker-compose.yml
    - docker-compose.override-hostname.yml
    - docker-compose.override-volumes.yml

- name: Create folders for docker volumes
  file:
    name: '{{ item }}'
    state: directory
  with_items:
    - '{{ statics_dir }}'
    - '{{ log_dir }}/nginx'
  become: True

# - name: Refresh private_ip var
#   include_vars: group_vars/{{ envt }}

- name: Link geoserver log to logs directory
  file:
    src: '{{ gsdata }}/logs/'
    dest: '{{ log_dir }}/geoserver'
    state: link
    force: True
    follow: False
  become: True

- name: Launch the stack
  command: docker-compose -f docker-compose.yml -f docker-compose.override-hostname.yml -f docker-compose.override-volumes.yml up --build
  args:
    chdir: '~/{{ project_dir }}'
  ignore_errors: True
  # no_log: True

# Commented because it requires modules installed (in roles/prep_server)
# which failed with fatal error: ffi.h: No such file or directory
# - name: Launch the stack
#   docker_service:
#     project_src: ~/{{ project_dir }}
#     files:
#       - docker-compose.override.yml
#     build: yes
#   become: True
#   environment:
#     PYTHONPATH: "{{ lookup('env','PYTHONPATH') }}:/usr/lib/python2.7/dist-packages"

# - name: Prepare the stack (without running) 2/2
#   command: docker-compose -f docker-compose.yml up --no-start
#   args:
#     chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
#   become: true
#
# - name: Start the database
#   command: docker-compose -f docker-compose.yml up -d db
#   args:
#     chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
#   become: true
#
# - debug: msg="{{ lookup('env','PATH') }} is an environment variable"
#
# - name: Initialise geoserver
#   command: docker-compose -f docker-compose.yml run --rm geoserver true
#   args:
#     chdir: '{{ ansible_env.HOME }}/{{ project_dir }}'
#     executable: /bin/bash
#   become: true
