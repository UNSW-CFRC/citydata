---
- name: Get geonode-project from repo
  git:
    repo: https://github.com/GeoNode/geonode-project.git
    dest: ~/geonode-project

- name: Install Django in virtualenv
  pip:
    virtualenv: ~/.virtualenvs/{{ project | lower }}
    name: Django=={{ django_version }}

- name: Create project
  shell: |
    source ~/.bashrc && source ~/.virtualenvs/{{ project | lower }}/bin/activate &&
    django-admin startproject --template=./geonode-project -e py,rst,json,yml,ini,env,sample -n Dockerfile {{ project | lower }}
  args:
    creates: "~/{{ project | lower }}"
    executable: /bin/bash

- name: Install Geonode from requirements
  pip:
    virtualenv: ~/.virtualenvs/{{ project | lower }}
    requirements: requirements.txt
    state: latest
  args:
    chdir: ~/{{ project | lower }}

- name: Install Geonode
  pip:
    virtualenv: ~/.virtualenvs/{{ project | lower }}
    name: .
    state: latest
    extra_args: -e
  args:
    chdir: ~/{{ project | lower }}

- name: Get GDAL version
  command: gdal-config --version
  register: gdal_version

- debug:
    var: gdal_version.stdout

- name: Get pyGDAL version
  shell: "pip install pygdal=={{ gdal_version.stdout }} 2>&1 | grep -oP '(?<=: )(.*)(?=\\))' | grep -oh {{ gdal_version.stdout }}\\.[0-9]"
  register: pygdal_version
  # no_log: true
  # ignore_errors: true

- debug:
    var: pygdal_version.stdout

- name: Install pyGDAL
  pip:
    name: pygdal=={{ pygdal_version.stdout }}
    virtualenv: ~/.virtualenvs/{{ project | lower }}
  args:
    chdir: ~/{{ project | lower }}

- name: Copy local_settings sample
  command: cp {{ project | lower }}/local_settings.py.sample {{ project | lower }}/local_settings.py
  args:
    chdir: ~/{{ project | lower }}
    creates: ~/{{ project | lower }}/{{ project | lower }}/local_settings.py

- name: Apply Geonode PR 4154 part 1/2
  # HTTP not HTTPS because their certificate is invalid
  replace:
    path: ~/.virtualenvs/{{ project | lower }}/src/geonode/geonode/base/management/commands/updategeoip.py
    regexp: http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz
    replace: https://build.geo-solutions.it/geonode/geoserver/latest/GeoLiteCity.dat.gz

- name: Apply Geonode PR 4154 part 2/2
  replace:
    path: ~/.virtualenvs/{{ project | lower }}/src/geonode/geonode/base/management/commands/updategeoip.py
    regexp: 'r = requests.get\(options\[''url''\], stream=True, timeout=10\)'
    replace: r = requests.get(options['url'], stream=True, timeout=10, verify=False)

- name: Restart Django
  file:
    path: ~/{{ project | lower }}//{{ project | lower }}/wsgi.py
    state:  touch

- name: Paver commands
  shell: |
    source ~/.bashrc && source ~/.virtualenvs/{{ project | lower }}/bin/activate &&
    paver {{ item }}
  args:
    executable: /bin/bash
    chdir: ~/{{ project | lower }}
  with_items:
    - reset
    - setup
    - sync
    - start
